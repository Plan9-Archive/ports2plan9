ln: conf516.dir destination exists
`configure' configures this package to adapt to many kinds of systems.

Usage: ./configure [OPTION]... [VAR=VALUE]...

To assign environment variables (e.g., CC, CFLAGS...), specify them as
VAR=VALUE.  See below for descriptions of some of the useful variables.

Defaults for the options are specified in brackets.

Configuration:
  -h, --help              display this help and exit
      --help=short        display options specific to this package
      --help=recursive    display the short help of all the included packages
  -V, --version           display version information and exit
  -q, --quiet, --silent   do not print `checking ...' messages
      --cache-file=FILE   cache test results in FILE [disabled]
  -C, --config-cache      alias for `--cache-file=config.cache'
  -n, --no-create         do not create output files
      --srcdir=DIR        find the sources in DIR [configure dir or `..']

Installation directories:
  --prefix=PREFIX         install architecture-independent files in PREFIX
                          [/usr/local]
  --exec-prefix=EPREFIX   install architecture-dependent files in EPREFIX
                          [PREFIX]

By default, `make install' will install all the files in
`/usr/local/bin', `/usr/local/lib' etc.  You can specify
an installation prefix other than `/usr/local' using `--prefix',
for instance `--prefix=$HOME'.

For better control, use the options below.

Fine tuning of the installation directories:
  --bindir=DIR            user executables [EPREFIX/bin]
  --sbindir=DIR           system admin executables [EPREFIX/sbin]
  --libexecdir=DIR        program executables [EPREFIX/libexec]
  --sysconfdir=DIR        read-only single-machine data [PREFIX/etc]
  --sharedstatedir=DIR    modifiable architecture-independent data [PREFIX/com]
  --localstatedir=DIR     modifiable single-machine data [PREFIX/var]
  --libdir=DIR            object code libraries [EPREFIX/lib]
  --includedir=DIR        C header files [PREFIX/include]
  --oldincludedir=DIR     C header files for non-gcc [/usr/include]
  --datarootdir=DIR       read-only arch.-independent data root [PREFIX/share]
  --datadir=DIR           read-only architecture-independent data [DATAROOTDIR]
  --infodir=DIR           info documentation [DATAROOTDIR/info]
  --localedir=DIR         locale-dependent data [DATAROOTDIR/locale]
  --mandir=DIR            man documentation [DATAROOTDIR/man]
  --docdir=DIR            documentation root [DATAROOTDIR/doc/PACKAGE]
  --htmldir=DIR           html documentation [DOCDIR]
  --dvidir=DIR            dvi documentation [DOCDIR]
  --pdfdir=DIR            pdf documentation [DOCDIR]
  --psdir=DIR             ps documentation [DOCDIR]

System types:
  --build=BUILD     configure for building on BUILD [guessed]
  --host=HOST       cross-compile to build programs to run on HOST [BUILD]
  --target=TARGET   configure for building compilers for TARGET [HOST]

Optional Features:
  --disable-option-checking  ignore unrecognized --enable/--with options
  --disable-FEATURE       do not include FEATURE (same as --enable-FEATURE=no)
  --enable-FEATURE[=ARG]  include FEATURE [ARG=yes]
  --enable-layout=LAYOUT
  --disable-util-dso      disable DSO build of modular components (crypto,
                          dbd, dbm, ldap)

Optional Packages:
  --with-PACKAGE[=ARG]    use PACKAGE [ARG=yes]
  --without-PACKAGE       do not use PACKAGE (same as --with-PACKAGE=no)
  --with-apr=PATH         prefix for installed APR or the full path to
                             apr-config
  --with-apr-iconv=DIR    relative path to apr-iconv source
  --with-crypto           enable crypto support
  --with-openssl=DIR      specify location of OpenSSL
  --with-nss=DIR          specify location of NSS
  --with-lber=library     lber library to use
  --with-ldap-include=path  path to ldap include files with trailing slash
  --with-ldap-lib=path    path to ldap lib file
  --with-ldap=library     ldap library to use
  --with-dbm=DBM          choose the DBM type to use.
                          DBM={sdbm,gdbm,ndbm,db,db1,db185,db2,db3,db4,db4X,db5X}
                          for some X=0,...,9
  --with-gdbm=DIR         enable GDBM support
  --with-ndbm=PATH        Find the NDBM header and library in `PATH/include'
                          and `PATH/lib'. If PATH is of the form `HEADER:LIB',
                          then search for header files in HEADER, and the
                          library in LIB. If you omit the `=PATH' part
                          completely, the configure script will search for
                          NDBM in a number of standard places.
  --with-berkeley-db=PATH Find the Berkeley DB header and library in
                          `PATH/include' and `PATH/lib'. If PATH is of the
                          form `HEADER:LIB', then search for header files in
                          HEADER, and the library in LIB. If you omit the
                          `=PATH' part completely, the configure script will
                          search for Berkeley DB in a number of standard
                          places.
  --with-pgsql=DIR        specify PostgreSQL location
  --with-mysql=DIR        enable MySQL DBD driver
  --with-sqlite3=DIR      enable sqlite3 DBD driver
  --with-sqlite2=DIR      enable sqlite2 DBD driver
  --with-oracle-include=DIR
                          path to Oracle include files
  --with-oracle=DIR       enable Oracle DBD driver; giving ORACLE_HOME as DIR
  --with-freetds=DIR      specify FreeTDS location
  --with-odbc=DIR         specify ODBC location
  --with-expat=DIR        specify Expat location, or 'builtin'
  --with-iconv=DIR        path to iconv installation

Some influential environment variables:
  CC          C compiler command
  CFLAGS      C compiler flags
  LDFLAGS     linker flags, e.g. -L<lib dir> if you have libraries in a
              nonstandard directory <lib dir>
  LIBS        libraries to pass to the linker, e.g. -l<library>
  CPPFLAGS    (Objective) C/C++ preprocessor flags, e.g. -I<include dir> if
              you have headers in a nonstandard directory <include dir>
  CPP         C preprocessor

Use these variables to override the choices made by `configure' or to help
it to find libraries and programs with nonstandard names/locations.

Report bugs to the package provider.
